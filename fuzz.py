#!/usr/bin/env python

import requests
import re
import argparse

def get_parameters():
    parser = argparse.ArgumentParser()
    parser.add_argument("-u","--URL", dest="URL", help="ENTER THE WEBSITE URL YOU WANT TO TARGET")
    parser.add_argument("-w","--wordlist", dest="wordlist", help="ENTER THE PATH TO YOUR WORDLIST")
    parser.add_argument("-s","--subdomainscan", dest="subdomainscan", help="ENTER THE PATH TO YOUR WORDLIST")
    options = parser.parse_args()
    if not options.wordlist:
        parser.error("[-] Please specify correct path to the wordlist, use --help for more info")
    if options.URL or options.subdomainscan:
        return options
    if not (options.URL and options.subdomainscan):
        parser.error("[-] Please specify proper URL, use --help for more info")
    #return options


def request(url):
    try:
        return requests.get("http://" + url)
    except requests.exceptions.ConnectionError:
        pass



def subdomain(url,wordlist_path):
    with open(wordlist_path,"r") as wordlist_file:
        for line in wordlist_file:
            word = line.strip()
            test_url = word + "." + url
            response = request(test_url)
            if response:
                print("[+] Discovered subdomain -->" + test_url)


def directory(url,wordlist_path):
    with open(wordlist_path, "r") as dirlist_file:
        for line in dirlist_file:
            word = line.strip()
            test_url = url + "/" + word
            response = request(test_url)
            if response:
                print("[+] Discovered URL --> " + test_url)
           
            

def extraxtinglinks(target_url):
    response = request(target_url)
    href_links = re.findall('(?:href=")(.*?)"', response.content.decode(errors="ignore"))
    for link in href_links:
        print(link)
def abc():   
    options =  get_parameters()
    target_url = options.URL
    wordlist_path = options.wordlist
    if options.subdomainscan:
        url = options.subdomainscan
        print(url)
        subdomain(url, wordlist_path)
    else:
        directory(target_url, wordlist_path)
